"""
Django settings for veterinaria project.

Generated by 'django-admin startproject' using Django 3.2.25.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
import base64

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-rg-grw)&#*5us+c2m2lcif6x$8fmps8km=8o&uqf(uvn5(h^w)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []



INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'usuarios',
    'mascotas',
    'citas',
    'servicios',
    'import_export',
    'django_extensions',
    'celery',
    'crispy_forms',
    'crispy_bootstrap5',
    'corsheaders',
    'ventas',
    'recursos_humanos',
    'inventarios',
]

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"  # Opcional
CRISPY_TEMPLATE_PACK = "bootstrap5"

# Application definition
AUTH_USER_MODEL = 'usuarios.Usuario'

# Asegúrate de tener:
ALLOWED_HOSTS = ['*']  # Temporalmente para desarrollo
DEBUG = True           # Debe estar en True


CORS_ALLOW_ALL_ORIGINS = True  # Solo para desarrollo
CSRF_TRUSTED_ORIGINS = ['http://localhost:8000', 'http://127.0.0.1:8000']


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'veterinaria.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
       'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'veterinaria.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'veterinaria_db',      # Nombre exacto de tu BD
        'USER': 'postgres',            # Usuario de PostgreSQL
        'PASSWORD': 'whatsapp',   # Contraseña de db
        'HOST': 'localhost',         #no esta en remoto
        'PORT': '5432',                # Puerto por defecto 
    }
}



# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

STATIC_URL = '/static/'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')



DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'redirect_by_role'
LOGOUT_REDIRECT_URL = 'inicio'




#redireccionamiento
LOGIN_REDIRECT_URL = 'redirect_by_role'  # Redirigir después del login
LOGIN_URL = 'login'  # URL para iniciar sesión
LOGOUT_REDIRECT_URL = 'inicio'  # Redirigir después de logout


EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # Envía correos a la consola
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

#img
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),  # Ruta relativa al proyecto
]


STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
#encriptar datos
FERNET_KEY = base64.urlsafe_b64encode(os.urandom(32)).decode()
ENCRYPTION_KEY = FERNET_KEY  # Usar variable de entorno en producción

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'debug.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

# correo settings.py
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'veterinariapatitas08@gmail.com'  # Usa variables de entorno en producción
EMAIL_HOST_PASSWORD = 'cprs that lnnr stsf' 
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
SITE_NAME = "Veterinaria Patitas"
DEFAULT_CHARSET = 'utf-8'
EMAIL_USE_LOCALTIME = True


LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'inicio'
LOGOUT_REDIRECT_URL = 'inicio'


FACIAL_RECOGNITION_SETTINGS = {
    'MODEL_PATH': os.path.join(BASE_DIR, 'modelos/facial_model.pkl'),
    'TRAIN_THRESHOLD': 20,  # Mínimo de muestras para entrenar
    'MATCH_THRESHOLD': 0.4,  # Umbral de similitud
}
SECURE_CROSS_ORIGIN_OPENER_POLICY = 'same-origin-allow-popups'
CSP_SCRIPT_SRC = ["'self'", "https://docs.opencv.org"]
INSTALLED_APPS += ['sslserver']

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

#celery
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'

# En settings.py (agregar)
BIOMETRIC_CONFIG = {
    'MIN_SAMPLES': 20,
    'FACE_DETECTION': {
        'scaleFactor': 1.1,
        'minNeighbors': 5,
        'minSize': (80, 80)
    },
    'RECOGNITION_THRESHOLD': 70
}
TF_ENABLE_ONEDNN_OPTS=0